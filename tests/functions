#!/bin/bash
#
# ima-evm-utils tests bash functions
#
# Copyright (C) 2019 Vitaly Chikunov <vt@altlinux.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

declare -i pass=0 fail=0 skip=0

_require() {
  RET=
  for i; do
    if ! type $i; then
      echo "$i is required for test"
      RET=1
    fi
  done
  [ $RET ] && exit 99
}

if tty -s; then
     RED=$'\e[1;31m'
  YELLOW=$'\e[1;33m'
    BLUE=$'\e[1;34m'
    NORM=$'\e[m'
fi

# Define EXITEARLY to exit testing on the first error.
exit_early() {
  if [ $EXITEARLY ]; then
    exit $1
  fi
}

# Defaults
MODE=+
HOWFAILED=
pos() {
  MODE=+
  HOWFAILED=
  eval "$@"
  case $? in
    0)  pass+=1 ;;
    77) skip+=1 ;;
    99) fail+=1; exit_early 1 ;;
    *)  fail+=1; exit_early 2 ;;
  esac
}

neg() {
  MODE=-
  HOWFAILED=properly
  eval "$@"
  case $? in
    0)  fail+=1; exit_early 3 ;;
    77) skip+=1 ;;
    99) fail+=1; exit_early 4 ;;
    *)  pass+=1 ;;
  esac
# Restore defaults
  MODE=+
  HOWFAILED=
}

_ispos() {
  [ -z "$HOWFAILED" ]
}

_isneg() {
  [ "$HOWFAILED" ]
}

red_if_pos() {
  _ispos && echo $@ $RED
}

norm_if_pos() {
  _ispos && echo $@ $NORM
}

_evmctl_catch() {
  local ret=$1 out=$2 cmd=$3 for=$4 del=${@:5}

  if [ $ret -gt 128 -a $ret -lt 255 ]; then
    echo $RED
    echo "evmctl $cmd failed hard with $ret for $for"
    sed 's/^/  /' $out
    echo $NORM
    rm -f $out $del
    return 99
  elif [ $ret -gt 0 ]; then
    red_if_pos
    echo "evmctl $cmd failed" $HOWFAILED "with $ret for $for"
    sed 's/^/  /' $out
    norm_if_pos
    rm -f $out $del
    return 1
  elif [ -n "$HOWFAILED" ]; then
    echo $RED
    echo "evmctl $cmd wrongly succeeded for $for"
    sed 's/^/  /' $out
    echo $NORM
  fi
  rm -f $out
  return 0
}

_enable_gost_engine() {
  # Do not enable if it already enabled by user
  if ! openssl md_gost12_256 /dev/null >/dev/null 2>&1 \
    && openssl engine gost >/dev/null 2>&1; then
    ENGINE=gost
  fi
}

_report_exit() {
  echo "PASS: $pass SKIP: $skip FAIL: $fail"
  if [ $fail -gt 0 ]; then
    exit 1
  elif [ $pass -gt 0 ]; then
    exit 0
  else
    exit 77
  fi
}
